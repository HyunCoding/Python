리스트 사용

List
여러개의 값을 담을 수 있는 변수
  list1 = [1,2,3,4,5]

값 읽어오기

리스트를 사용할때는 0번째가 첫번째
첫번째 값 list1[0]
두번째 값 list1[1]
뒤에서 첫번째 값 list1[-1]
뒤에서 두번째 값 list1[-2]

리스트에 들어있는 값 보다 큰 값을 읽어오려고 하면 에러
예. 위의 list1에서 list1[5] 또는 list1[-6]은 에러

값 쓰기
변수와 같이 list1[0]=10이라고 하면 list의 첫번째 값이 10으로 변경

------------------------------------------------------------------------------------------------------------

리스트 수정
리스트에 새로운 값을 추가하는 방법

list1=[1,2,3]이라고 할 때
append를 이용
list1.append(4)
append를 이용하면 리스트에 새로운 값이 추가된다.

뒤에 새로운 리스트를 더하기
list2=list1+[4]
list1은 그대로 두고, 새로운 리스트를 만들어 낸다.


리스트에 값이 들어있는지 확인하는 방법
in 연산을 이용
#12라는 값이 리스트에 들어있는지 확인하는 코드
n=12
if n in list1:
    print('{}가 리스트에 있다.'.format(n))


리스트에서 필요 없는 값을 지우는 방법

1.del을 이용해서 특정 위치의 값을 지우기
  del list1[10] 리스트의 10번째 값을 지워라

2.remove를 이용해서 특정 값을 지우기
  list1.remove(40)을 하면 리스트에 40이라는 값이 있는경우 삭제
  여러개의 값이 있는 경우 가장 앞에 있는 하나만 지워짐

------------------------------------------------------------------------------------------------------------

List의 다양한 기능

List의 기능
list.index( value ) : 값을 이용하여 위치를 찾는 기능
list.extend( [value1, value2] ) : 리스트 뒤에 값을 추가
list.insert( index, value ) : 원하는 위치에 값을 추가하고 그자리에 있던값은 오른쪽으로 보냄
list.sort( ) : 값을 순서대로 정렬
list.reverse( ) : 값을 역순으로 정렬


list1 = [1, 2, 3, 4]

# 아래줄에서 list1의 1번째 자리에 8을 넣고 원래 있던 값은 오른쪽으로 밀어 보세요.
list1.insert(0,8)
print("첫 번째 자리에 8을 넣은 결과 : {}".format(list1))
첫 번째 자리에 8을 넣은 결과 : [8, 1, 2, 3, 4]

# 아래줄에서 list1을 작은 수부터 큰 수로 정렬해 보세요
list1.sort()
print("list1을 작은 수부터 큰 수로 정렬한 결과 : {}".format(list1))
list1을 작은 수부터 큰 수로 정렬한 결과 : [1, 2, 3, 4, 8]

# 아래줄에서 list1을 거꾸로 만들어 보세요
list1.reverse()
print("list1을 거꾸로 정렬한 결과 : {}".format(list1))
list1을 거꾸로 정렬한 결과 : [8, 4, 3, 2, 1]

------------------------------------------------------------------------------------------------------------

List와 문자열
List와 String
리스트와 문자열은 유사하다.
서로 변환이 가능하다.
list = str.split( ) : 문자열에서 리스트로
" ".join( list ) : 리스트에서 문자열으로

------------------------------------------------------------------------------------------------------------

Slice
slicing
리스트나 문자열에서 값을 여러개 가져오는 기능
text = "hello world"
text = text[ 1:5 ]

list = [ 0, 1, 2, 3, 4, 5 ]
list = list[ 1:3 ]
slice를 하면 해당하는 부분의 리스트나 문자열을 새로 만들어 준다.

시작과 끝부분을 얻어 오는 방법

list[ 2: ] : 2번째부터 끝까지 반환
list[ : 2 ] : 처음부터 2번째 까지 반환
list[ : ] : 처음부터 끝까지 전부 반환

------------------------------------------------------------------------------------------------------------

Slice의 step
step
slice한 값의 범위에서 step 값을 주어 그 값만큼 건너뛰어 가져오는 기능
list[ 시작값:끝값:step ]


list1 = list(range(20))

# new_list가 5, 8, 11, 14의 값을 가지도록 list1을 slice하세요
new_list = list1[5:15:3]

print(new_list)

# reverse_list가 17, 13, 9, 5의 값을 가지도록 list1을 slice하세요
reverse_list = list1[17:4:-4]

print(reverse_list)

------------------------------------------------------------------------------------------------------------

Slice로 리스트 수정하기
slice 활용
삭제
del list[ :5 ] : 처음부터 5번째까지 삭제.
수정
list[ 1:3 ] = [ 77, 88 ]
list[ 1:3 ] = [ 77, 88 ,99 ] : 더 많은 개수로 변환
list[ 1:4 ] = [ 8 ] : 더 적은 개수로 변환

------------------------------------------------------------------------------------------------------------

@공부하기

List
List Comprehension
파이썬의 유용한 도구

예1 [ i*i for i in range(1,11) ] # [ 계산식 for문 ]

예2 [ i*i for i in range(1,11) if i % 2 == 0 ] # [ 계산식 for문 조건문 ]

예3 [ ( x, y ) for x in range(15) for y in range(15) ] # [ 계산식 for문 for문 ]
