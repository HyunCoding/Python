숫자의 자료형

정수 = int   /   실수 = float   /   복소수 = complex

사칙연산 ( '+' , '-' , '*' , '/' )

나누기 조심해야할점
 ex) 4 / 2 = 2.0 (실수) 
 ex) 6 // 3 = 3 (정수)
나눗셈 후 소수점 이하를 버리는 연산자 ' // '
 ex) 4 // 2 = 2 (정수)
 ex) 5.5 / 2 = 2.0 (소수점 이하는 버리기 떄문에 결과는 항상 '.0'으로 끝남)

연산자 종류
나머지를 구하는 연산자 %
 ex) 10 % 3 = 1 , 5 % 3 = 2

몫을 구하는 연산자 / , //
 ex) 4 / 2 = 2.0 (실수) 
 ex) 6 // 3 = 3 (정수)

몫과 나머지를 함께 구하는 divmod() 함수 이용하기 (결과값이 튜플로 나옴)
 ex) divmod(5, 2) = (2, 1)

제곱을 구하는 연산자 **
 ex) 3 ** 2 = 9
     2 ** 3 = 8

------------------------------------------------------------------------------------------------------------

문자열
따옴표로 감싸진 글

변수에 문자열을 넣는 예
my_name = 'Python'

텍스트 두개를 더하면 문자열이 이어붙여짐
text = '2015' + '1991'하고 나면 text에는 '20151991'이라는 값이 저장

텍스트는 더하기만 가능하고, 빼기(-)등 다른 계산은 불가능

------------------------------------------------------------------------------------------------------------

값을 정수(int)로 만들기
 ex) int(3.3) = 3 , int(5 / 2) = 2 , int('10') = 10 -> (문자열을 정수로 만들기)

값을 실수(float)로 만들기
 ex) float(숫자)  /  float(5) = 5.0
 ex) float(계산식)  /  float(1 + 2) = 3.0
 ex) float('문자열')  /  float('5.3') = 5.3

값을 복소수(complex)로 만들기
파이썬에서는 실수부와 허수부로 이루어진 복소수(complex number)도 사용할 수 있습니다. 이때 허수부는 숫자 뒤에 j를 붙입니다(수학에서는 허수를 i로 표현하지만 공학에서는 j를 사용합니다).
두 실수를 복소수로 만들 때는 complex를 사용하면 됩니다.
 ex) complex(1.2, 1.3) = (1.2+1.3j)


실수 계산하기
 ex) 3.5 + 2.1 = 5.6
 ex) 4.3 - 2.7 = 1.5999999999999996
 ex) 1.5 * 3.1 = 4.65
 ex) 5.5 / 3.1 = 1.7741935483870968
4.3 - 2.7의 결과가 좀 이상합니다. 1.6이 나와야 하는데 1.5999999999999996이 나왔습니다. 왜냐하면 컴퓨터는 실수를 표현할 때 오차가 발생하기 때문입니다.
오차 문제는 다소 어려운 주제이므로 지금은 크게 신경 쓰지 않아도 됩니다. 나중에 실무에서 실수를 다룰 때 오차에 대한 적절한 처리가 필요합니다

------------------------------------------------------------------------------------------------------------

객체(object)의 자료형 알아내기 type(값)
 ex) type(10) = class int ( 자료형 정수(int)이다. )


2진수, 8진수, 16진수

 정수는 10진수 이외에도 2진수, 8진수, 16진수로도 표현할 수 있습니다.
2진수: 숫자 앞에 0b를 붙이며 0과 1을 사용합니다.
8진수: 숫자 앞에 0o(숫자 0과 소문자 o)를 붙이며 0부터 7까지 사용합니다.
16진수: 숫자 앞에 0x 또는 0X를 붙이며 0부터 9, A(10)부터 F(15)까지 사용합니다(소문자 a부터 f도 가능).

ex) 0b110 = 6  2진수
ex) 0o10 = 8   8진수
ex) 0xF = 15   16진수

------------------------------------------------------------------------------------------------------------

자료형 다루기
자료형
type( a ) # type( 변수명 ) : 자료형
isinstance( 42, int ) # isinstance( 값, 자료형 ) : 자료형 검사
------------------------------------------------------------------------------------------------------------

조건식
조건

숫자 비교

크다
0 < 10
10 > 11

크거나 같다, 작거나 같다
3 <= 10
15 >= 10

같다
5 == 5

같지 않다
5 != 10

비교의 결과는 True 또는 False

------------------------------------------------------------------------------------------------------------

boolean연산

and연산
두 조건이 모두 참인지를 체크

or
두 조건 중 하나라도 참이다

not
true/false를 뒤집기 위해 사용

예. a는 20대이다.
20 <= a and a < 30

예시. a는 18세 미만 또는 60세 이상이다.
a < 18 or 60 <= a

------------------------------------------------------------------------------------------------------------

논리연산 더 알아보기
단락평가
논리연산에서 코드의 앞만 보고 값을 정할 수 있는 경우 뒤는 보지 않고 값을 결정
복잡한 코드를 단순하게 하는 방식

bool 값과 논리연산
true, false
숫자 0을 제외한 모든 수 - true
빈 딕셔너리, 빈 리스트를 제외한 모든 딕셔너리, 리스트 - true
아무 값도 없다는 의미인 None - false
빈문자열을 제외한 모든 문자열 - true